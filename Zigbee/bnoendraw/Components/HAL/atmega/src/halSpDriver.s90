/**************************************************************************//**
  \file  halSpDriver.s90

  \brief Implementation of self programming functions.

  \author
      Atmel Corporation: http://www.atmel.com \n
      Support email: avr@atmel.com

    Copyright (c) 2008 , Atmel Corporation. All rights reserved.
    Licensed under Atmel's Limited License Agreement (BitCloudTM).

  \internal
    History:
      13/05/09 A. Khromykh - Created
      29/06/12 D. Kolmakov - Copied and modified
    Last change:
      $Id: halSpDriver.s90 23217 2012-10-19 08:55:42Z akhromykh $
*******************************************************************************/

/*=============================================================
This routine enables RWW section.
Parameters:
  none
Returns:
  none.
===============================================================*/
MODULE _halSpRWWSectionEnable
EXTERN SP_CommonSPM
PUBLIC halSpRWWSectionEnable
RSEG BOOT_SECTION:NOROOT(1)
halSpRWWSectionEnable:
  in     r23, 0x3B                             ; Save RAMPZ, which is restored in SP_CommonSPM.
  ldi    r20, 0x10                             ; Prepare SPM command in R20.  (1 << RWWSRE)
  jmp    SP_CommonSPM                          ; Jump to common SPM code.

ENDMOD

/*=============================================================
This routine writes the word from R23:R22 into the Flash page buffer at
address R19:R18.
Parameters:
  R19:R18 - Word to write.
  R17:R16 - Byte address into Flash page.
Returns:
  none.
===============================================================*/
MODULE _halSpLoadFlashWord
EXTERN SP_CommonSPM
PUBLIC halSpLoadFlashWord
RSEG BOOT_SECTION:NOROOT(1)
halSpLoadFlashWord:
  in        r23,   0x3B                        ; Save RAMPZ, which is restored in SP_CommonSPM.
  movw      r1:r0, r19:r18                     ; Prepare flash word in R1:R0.
  clr       r20                                ; prepare command for SPM
  jmp       SP_CommonSPM                       ; Jump to common SPM code.

ENDMOD

/*=============================================================
This routine erases the page buffer to the
Flash page at address R19:R18:R17:R16 in the application section. The address
can point anywhere inside the page.
Parameters:
  R19:R18:R17:R16 - Byte address into Flash page.
Returns:
  none.
===============================================================*/
MODULE _halSpEraseApplicationPage
EXTERN SP_CommonSPM
PUBLIC halSpEraseApplicationPage
RSEG BOOT_SECTION:NOROOT(1)
halSpEraseApplicationPage:
  in     r23, 0x3B                             ; Save RAMPZ, which is restored in SP_CommonSPM.
  out    0x3B, r18                             ; Load RAMPZ with the MSB of the address.
  movw   r19:r18, r17:r16                      ; Move low bytes of address to ZH:ZL from R23:R22
  ldi    r20, 0x02                             ; Prepare SPM command in R20. (1 << PGERS)
  jmp    SP_CommonSPM                          ; Jump to common SPM code.

ENDMOD

/*=============================================================
This routine writes the page buffer to the
Flash page at address R19:R18:R17:R16 in the application section. The address
can point anywhere inside the page.
Parameters:
  R19:R18:R17:R16 - Byte address into Flash page.
Returns:
  none.
===============================================================*/
MODULE _halSpWriteApplicationPage
EXTERN SP_CommonSPM
PUBLIC halSpWriteApplicationPage
RSEG BOOT_SECTION:NOROOT(1)
halSpWriteApplicationPage:
  in     r23, 0x3B                             ; Save RAMPZ, which is restored in SP_CommonSPM.
  out    0x3B, r18                             ; Load RAMPZ with the MSB of the address.
  movw   r19:r18, r17:r16                      ; Move low bytes of address to ZH:ZL from R23:R22
  ldi    r20, 0x04                             ; Prepare NVM command in R20.  (1 << PGWRT)
  jmp    SP_CommonSPM                          ; Jump to common SPM code.

ENDMOD

/*******************************************************************************
Reads byte from internal flash
Parameters:
  R19:R18:R17:R16 - Byte address into flash.
Returns:
  R16 - read byte from flash.
*******************************************************************************/
MODULE _halSpReadInternalFlash
PUBLIC halSpReadInternalFlash
RSEG BOOT_SECTION:NOROOT(1)
halSpReadInternalFlash:
    in    r19,  0x3B                             ; Save RAMPZ.
    out	  0x3B, r18                              ; Load RAMPZ with the MSB of the address.
    movw  r31:r30, r17:r16                       ; Move low bytes of address to ZH:ZL from R17:R16
    elpm  r16,  Z                                ; Extended load program memory from Z address
    out	  0x3B, r19                              ; Restore RAMPZ register.
    ret                                          ; return from function
ENDMOD

/*=============================================================
This routine is called by several other routines, and contains common code
for executing an SPM command, including the return statement itself.

If the operation (SPM command) requires the R1:R0 registers to be
prepared, this must be done before jumping to this routine.
Parameters:
  R1:R0    - Optional input to SPM command.
  R19:R18  - Low bytes of Z pointer.
  R20      - SPM Command code.
Returns:
  none.
===============================================================*/
MODULE _SP_CommonSPM
PUBLIC SP_CommonSPM
RSEG BOOT_SECTION:NOROOT(1)
SP_CommonSPM:
  movw  r31:r30, r17:r16  ; Load R17:R16 into Z.
  ori   r20, 0x01         ; prepare command for SPM
  sts   0x57, r20         ; Load prepared command into SPMCSR register.
  spm                     ; Self-program.
  out   0x3B, r23         ; Restore RAMPZ register.
  ret

ENDMOD

END
; eof halSpDriver.s90
